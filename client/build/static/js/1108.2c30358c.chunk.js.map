{"version":3,"file":"static/js/1108.2c30358c.chunk.js","mappings":"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","sources":["components/UserLoding.jsx","pages/Memories.jsx","components/FlexBetween.jsx","widgets/CreatePostWidget.jsx","widgets/Post.jsx"],"sourcesContent":["import React from \"react\";\n\nconst Spinner = ({ text }) => {\n  return (\n    <div className=\"flex justify-center items-center h-full\">\n      <svg\n        className=\"animate-spin -ml-1 mr-3 h-8 w-8 text-green-600\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n      >\n        <circle\n          className=\"opacity-25\"\n          cx=\"12\"\n          cy=\"12\"\n          r=\"10\"\n          stroke=\"currentColor\"\n          strokeWidth=\"4\"\n        />\n        <path\n          className=\"opacity-75\"\n          fill=\"currentColor\"\n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 004 20h4a7.963 7.963 0 01-2-5.291L6 17l0 .001zM12 20a7.963 7.963 0 01-2-5.291l2-2.72A5.965 5.965 0 0012 15v5h0zm4-2.709A7.962 7.962 0 0020 12h-4a7.963 7.963 0 01-2 5.291l2 2.719 0-.001z\"\n        />\n      </svg>\n      <span className=\"text-green-600 animate-wave\">\n        {\" \"}\n        Hold on {text} are Loading...\n      </span>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React from \"react\";\n\nimport { Box, useMediaQuery } from \"@mui/material\";\n// import NavBar from \"@/scenes/NavBar\";\n// import UserWidget from \"@/scenes/widgets/UserWidget\";\nimport CreatePostWidget from \"../widgets/CreatePostWidget\";\nimport Navbar from \"../components/Navbar\";\nimport Posts from \"../widgets/Post\";\n// import PostsWidget from \"../widgets/PostsWidget\";\n// import { useSelector } from \"react-redux\";\n// import FriendsListWidget from \"../widgets/FriendsListWidget\";\n\nexport default function Memories() {\n  return (\n    <>\n      {/* <Navbar headerDash={true} /> */}\n      <div className=\"flex flex-col items-center bg-slate-200  space-y-4\">\n        {/* <CreatePostWidget profilePath={\"/f\"} /> */}\n        <Posts />\n      </div>\n    </>\n  );\n}\n","import { Box } from \"@mui/material\";\nimport { styled } from \"@mui/system\";\n\nconst FlexBetween = styled(Box)({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n});\n\nexport default FlexBetween;\n","// CreatePost.js\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  Divider,\n  Typography,\n  Button,\n  TextField,\n  Paper,\n  Avatar,\n  IconButton,\n} from \"@mui/material\";\nimport { AttachFile, InsertPhoto } from \"@mui/icons-material\";\n\nimport { EditOutlined, DeleteOutlined } from \"@mui/icons-material\";\n\nimport Dropzone from \"react-dropzone\";\nimport FlexBetween from \"../components/FlexBetween\";\nimport { useEffect } from \"react\";\nimport { AuthApi } from \"../context/user\";\nimport axios from \"axios\";\nimport { AlertApi } from \"../context/AlertContext\";\n\nconst CreatePost = ({ setpostsData }) => {\n  const [containsImage, setContainsImage] = useState(false);\n  const [image, setImage] = useState(null);\n  const [caption, setCaption] = useState(\"\");\n  const [loader, setLoader] = useState(true);\n  const [posting, setPosting] = useState(false);\n\n  const { user } = AuthApi();\n  const { setAlert } = AlertApi();\n  useEffect(() => {\n    if (caption || image) {\n      setLoader(false);\n    } else {\n      setLoader(true);\n    }\n  }, [image, caption]);\n\n  const handleSubmit = async () => {\n    setLoader(true);\n    setPosting(true);\n    const formData = new FormData();\n    formData.append(\"content\", caption);\n    formData.append(\"image\", image);\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        authorization: `Bearer ${user?.Token}`,\n      },\n    };\n\n    const url = `${process.env.REACT_APP_API_KEY}/admins/post`;\n    try {\n      const res = await axios.post(url, formData, config);\n\n      setpostsData((prevItems) => [res.data.post, ...prevItems]);\n      setCaption(\"\");\n      setImage(null);\n\n      setAlert({\n        type: \"success\",\n        message: \"Success Post\",\n      });\n    } catch (error) {\n      setAlert({\n        type: \"error\",\n        message: \"Somthing went Wrong \",\n      });\n    }\n    setPosting(false);\n\n    setLoader(false);\n  };\n  return (\n    <Paper className=\"p-4 mt-2 space-y-4 w-96 md:full bg-white rounded-md shadow-md\">\n      <div className=\"flex items-center space-x-2\">\n        <Avatar src={user?.profile} alt=\"User Avatar\" />\n        <TextField\n          id=\"outlined-multiline-flexible\"\n          label=\"What's on your mind?\"\n          multiline\n          maxRows={4}\n          fullWidth\n          value={caption}\n          variant=\"outlined\"\n          onChange={(e) => {\n            setCaption(e.target.value);\n          }}\n        />\n      </div>\n\n      {containsImage && (\n        <Box border={`1px solid gray`} borderRadius=\"5px\" mt=\"1rem\" p=\"1rem\">\n          <Dropzone\n            acceptedFiles=\".jpg,.jpeg,.png\"\n            multiple={false}\n            onDrop={(acceptedFiles) => setImage(acceptedFiles[0])}\n          >\n            {({ getRootProps, getInputProps }) => (\n              <FlexBetween>\n                <Box\n                  {...getRootProps()}\n                  border={`2px dashed cyan`}\n                  p=\"1rem\"\n                  width=\"100%\"\n                  sx={{ \"&:hover\": { cursor: \"pointer\" } }}\n                >\n                  <input {...getInputProps()} />\n                  {!image ? (\n                    <p>Add Image Here</p>\n                  ) : (\n                    <FlexBetween>\n                      <Typography>{image.name}</Typography>\n                      <EditOutlined />\n                    </FlexBetween>\n                  )}\n                </Box>\n                {image && (\n                  <IconButton\n                    onClick={() => setImage(null)}\n                    sx={{ width: \"15%\" }}\n                  >\n                    <DeleteOutlined />\n                  </IconButton>\n                )}\n              </FlexBetween>\n            )}\n          </Dropzone>\n        </Box>\n      )}\n\n      <Divider sx={{ margin: \"1.25rem 0\" }} />\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex space-x-2\">\n          <IconButton\n            color=\"primary\"\n            onClick={() => setContainsImage(!containsImage)}\n          >\n            <InsertPhoto />\n          </IconButton>\n          <IconButton color=\"primary\">\n            <AttachFile />\n          </IconButton>\n        </div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={loader && user}\n          onClick={handleSubmit}\n        >\n          {!posting ? \"Post\" : \"Posting.....\"}\n        </Button>\n      </div>\n    </Paper>\n  );\n};\n\nexport default CreatePost;\n","// Posts.js\nimport React, { useState } from \"react\";\nimport { Paper, Avatar, Typography, Box, IconButton } from \"@mui/material\";\nimport { DeleteForever } from \"@mui/icons-material\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport UserLoding from \"../components/UserLoding\";\nimport { AuthApi } from \"../context/user\";\nimport { AlertApi } from \"../context/AlertContext\";\nimport CreatePost from \"./CreatePostWidget\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Posts = ({ UserProfile, uuid }) => {\n  const [postsData, setpostsData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n  const [pictureToDelete, setPictureToDelete] = useState(null);\n\n  const { user } = AuthApi();\n  const { setAlert } = AlertApi();\n  const { pathname } = useLocation();\n  const loadMorePosts = async () => {\n    try {\n      // Fetch more posts from your API using Axios\n\n      if (uuid) {\n      } else {\n      }\n      let url = uuid\n        ? `${process.env.REACT_APP_API_KEY}/admins/post?page=${page}&id=${uuid}`\n        : `${process.env.REACT_APP_API_KEY}/admins/post?page=${page}`;\n      const response = await axios.get(url);\n      const newData = response.data.data;\n      // console.log(newData);\n      // console.log(response);\n\n      if (newData.length > 0) {\n        setpostsData((prevItems) => {\n          const uniqueNewData = newData.filter((newItem) => {\n            // Filter out items with duplicate _id from prevItems\n            return !prevItems.some((prevItem) => prevItem._id === newItem._id);\n          });\n\n          // Concatenate uniqueNewData with prevItems\n          return [...prevItems, ...uniqueNewData];\n        });\n        setPage(page + 1);\n      } else {\n        setHasMore(false);\n      }\n    } catch (error) {\n      console.error(\"Error fetching more posts:\", error);\n    }\n  };\n\n  useEffect(() => {\n    loadMorePosts();\n  }, [uuid]);\n\n  // console.log(postsData);\n  // for deletion\n  const handleDelete = (picture) => {\n    setPictureToDelete(picture);\n    setShowDeleteConfirmation(true);\n  };\n\n  const handleCancelDelete = () => {\n    setPictureToDelete(null);\n    setShowDeleteConfirmation(false);\n  };\n\n  const handleConfirmDelete = async (post) => {\n    const url = `${process.env.REACT_APP_API_KEY}/admins/post/delete`;\n    const config = {\n      headers: {\n        authorization: `Bearer ${user?.Token}`,\n      },\n    };\n    const playload = {\n      id: post._id,\n      image: post.path,\n    };\n\n    try {\n      await axios.post(url, playload, config);\n      setpostsData((prevItems) =>\n        prevItems.filter((item) => item._id !== post._id)\n      );\n      setShowDeleteConfirmation(null);\n      setPictureToDelete(null);\n      setAlert({\n        type: \"success\",\n        message: \"Success Post Delete \",\n      });\n    } catch (error) {\n      console.log(error);\n      setAlert({\n        type: \"error\",\n        message: \"Somthing went Wrong \",\n      });\n    }\n  };\n\n  return (\n    <>\n      {pathname === \"/alumni\" ? <CreatePost setpostsData={setpostsData} /> : \"\"}\n\n      <div\n        className={`flex p-4 flex-col mt-2 space-y-4 w-80 ${\n          UserProfile ? \"md:full\" : \"md:w-5/12\"\n        }  `}\n      >\n        <InfiniteScroll\n          dataLength={postsData.length}\n          next={loadMorePosts}\n          hasMore={hasMore}\n          loader={<UserLoding text=\"Post\" />}\n        >\n          {postsData.map((post) => (\n            <Paper\n              key={post._id}\n              className=\"p-4 mt-3 bg-white rounded-md shadow-md\"\n            >\n              <div className={`flex items-center `}>\n                <div className=\"flex items-center space-x-2\">\n                  <Avatar src={post.avtar} alt=\"User Avatar\" />\n                  <h2 variant=\"subtitle1\">{post?.name}</h2>\n                </div>\n                <div className={pathname === \"/alumni\" ? \"\" : \"hidden\"}>\n                  <DeleteForever\n                    onClick={() => handleDelete(post)}\n                    className=\" ml-20 text-red-600 hover:text-red-400\"\n                  />\n                </div>\n              </div>\n              <Typography variant=\"body1\" sx={{ marginTop: \"0.5rem\" }}>\n                {post.content}\n              </Typography>\n              {post.image && (\n                <Box mt=\"1rem\">\n                  <img src={post.image} alt=\"Post Image\" className=\"w-full\" />\n                </Box>\n              )}\n            </Paper>\n          ))}\n        </InfiniteScroll>\n\n        {showDeleteConfirmation && (\n          <div\n            className={`fixed inset-0 flex items-center justify-center ${\n              showDeleteConfirmation ? \"visible\" : \"hidden\"\n            }`}\n            style={{\n              backdropFilter: showDeleteConfirmation ? \"blur(8px)\" : \"none\",\n              zIndex: showDeleteConfirmation ? 999 : -1,\n            }}\n          >\n            <div className=\"bg-white rounded-lg p-6 text-center\">\n              <p className=\"text-lg text-black font-semibold mb-4\">\n                Are you sure you want to delete this post ?\n              </p>\n              <div className=\"mb-4\">\n                {pictureToDelete.image ? (\n                  <img\n                    src={pictureToDelete.image}\n                    alt={pictureToDelete.Title}\n                    className=\"w-56 h-36 object-cover rounded-lg mx-auto\"\n                  />\n                ) : (\n                  \"\"\n                )}\n\n                <p className=\"text-gray-600 mt-2\">{pictureToDelete.content}</p>\n              </div>\n              <div className=\"flex justify-center\">\n                <button\n                  onClick={() => {\n                    handleConfirmDelete(pictureToDelete);\n                  }}\n                  className=\"bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md mr-2\"\n                >\n                  Delete\n                </button>\n                <button\n                  onClick={() => {\n                    handleCancelDelete();\n                    // pageview(false);\n                  }}\n                  className=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-md\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Posts;\n"],"names":["_ref","text","_jsxs","className","children","xmlns","fill","viewBox","_jsx","cx","cy","r","stroke","strokeWidth","d","Memories","_Fragment","Posts","styled","Box","display","justifyContent","setpostsData","containsImage","setContainsImage","useState","image","setImage","caption","setCaption","loader","setLoader","posting","setPosting","user","AuthApi","setAlert","AlertApi","useEffect","Paper","Avatar","src","profile","alt","TextField","id","label","multiline","maxRows","fullWidth","value","variant","onChange","e","target","border","borderRadius","mt","p","Dropzone","acceptedFiles","multiple","onDrop","_ref2","getRootProps","getInputProps","FlexBetween","width","sx","cursor","Typography","name","EditOutlined","IconButton","onClick","DeleteOutlined","Divider","margin","color","InsertPhoto","AttachFile","Button","disabled","async","formData","FormData","append","config","headers","authorization","concat","Token","url","process","res","axios","post","prevItems","data","type","message","error","UserProfile","uuid","postsData","page","setPage","hasMore","setHasMore","showDeleteConfirmation","setShowDeleteConfirmation","pictureToDelete","setPictureToDelete","pathname","useLocation","loadMorePosts","newData","get","length","uniqueNewData","filter","newItem","some","prevItem","_id","console","CreatePost","InfiniteScroll","dataLength","next","UserLoding","map","avtar","DeleteForever","marginTop","content","style","backdropFilter","zIndex","Title","playload","path","item","log","handleConfirmDelete"],"sourceRoot":""}
{"version":3,"file":"static/js/6429.54daad21.chunk.js","mappings":"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","sources":["admin/components/EventsUploadFrom.jsx","admin/components/EventView.jsx","admin/pages/Events.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport { AlertApi } from \"../../context/AlertContext\";\nimport { AuthApi } from \"../../context/user\";\n\nconst NewsSchema = Yup.object().shape({\n  title: Yup.string().required(\"Title is required\"),\n  date: Yup.date().required(\"Date is required\"),\n  eventText: Yup.string().required(\"Event text is required\"),\n});\n\nconst EventsUploadFrom = ({ fetchEvent }) => {\n  const { setAlert } = AlertApi();\n\n  const { admin } = AuthApi();\n  const handleSubmit = async (values, { resetForm }) => {\n    // Handle the form submission here\n    const { title, date, eventText } = values;\n\n    const url = `${process.env.REACT_APP_API_KEY}/admins/event`;\n\n    const playload = {\n      title: title,\n      date: date,\n      description: eventText,\n    };\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${admin.token}`,\n      },\n    };\n    try {\n      await axios.post(url, playload, config);\n      setAlert({ type: \"success\", message: \"success\" });\n      fetchEvent();\n      resetForm();\n    } catch (error) {\n      setAlert({ type: \"error\", message: \"Somthing went wrong\" });\n    }\n  };\n  return (\n    <Formik\n      initialValues={{ title: \"\", date: \"\", eventText: \"\" }}\n      validationSchema={NewsSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ errors, touched, isSubmitting }) => (\n        <Form className=\"mt-4\">\n          <div className=\"mb-4\">\n            <label\n              className=\"block text-gray-700 text-sm font-bold mb-2\"\n              htmlFor=\"title\"\n            >\n              Event Title:\n            </label>\n            <Field\n              type=\"text\"\n              name=\"title\"\n              id=\"title\"\n              className={`appearance-none  rounded w-full py-2 px-3 text-white-900 font-bold bg-purple-600 leading-tight focus:outline-none focus:shadow-outline ${\n                errors.title && touched.title ? \" border border-red-500\" : \"\"\n              }`}\n              placeholder=\"Enter Event title\"\n            />\n            <ErrorMessage\n              name=\"title\"\n              component=\"div\"\n              className=\"text-red-500 text-sm mt-1\"\n            />\n          </div>\n\n          <div className=\"mb-4\">\n            <label\n              className=\"block text-gray-700 text-sm font-bold mb-2\"\n              htmlFor=\"date\"\n            >\n              Date:\n            </label>\n            <Field\n              type=\"date\"\n              name=\"date\"\n              id=\"date\"\n              className={`appearance-none  rounded w-full py-2 px-3 text-white-900 font-bold leading-tight  bg-purple-600 focus:outline-none focus:shadow-outline ${\n                errors.date && touched.date ? \"border border-red-500\" : \"\"\n              }`}\n              placeholder=\"Select news date\"\n            />\n            <ErrorMessage\n              name=\"date\"\n              component=\"div\"\n              className=\"text-red-500 text-sm mt-1\"\n            />\n          </div>\n\n          <div className=\"mb-4\">\n            <label\n              className=\"block text-gray-700 text-sm font-bold mb-2\"\n              htmlFor=\"eventText\"\n            >\n              News Text:\n            </label>\n            <Field\n              as=\"textarea\"\n              name=\"eventText\"\n              id=\"eventText\"\n              rows=\"4\"\n              className={`appearance-none  rounded w-full py-2 px-3 text-white-900 font-bold leading-tight bg-purple-600 focus:outline-none focus:shadow-outline ${\n                errors.eventText && touched.eventText\n                  ? \"border border-red-500\"\n                  : \"\"\n              }`}\n              placeholder=\"Enter Event text\"\n            />\n            <ErrorMessage\n              name=\"eventText\"\n              component=\"div\"\n              className=\"text-red-500 text-sm mt-1\"\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n            disabled={isSubmitting}\n          >\n            {isSubmitting ? \"Plz wait ......\" : \" Submit Event\"}\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default EventsUploadFrom;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport axios from \"axios\";\nimport { AuthApi } from \"../../context/user\";\nimport { AlertApi } from \"../../context/AlertContext\";\n\nconst NewsView = ({ eventList, fetchEvent }) => {\n  // Sample news data for demonstration (replace with actual data)\n\n  const [isDeleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [selectedNewsForDelete, setselectedNewsForDelete] = useState(null);\n  const [isEditDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedNews, setSelectedNews] = useState(null);\n  const [loader, setloader] = useState(false);\n\n  const handleEdit = (news) => {\n    setSelectedNews(news);\n\n    setEditDialogOpen(true);\n    setloader(false);\n  };\n\n  const { admin } = AuthApi();\n  const { setAlert } = AlertApi();\n\n  const handleCancelEdit = () => {\n    setEditDialogOpen(false);\n    setSelectedNews(null);\n    setloader(false);\n  };\n\n  const handleConfirmEdit = async (values) => {\n    // Update the news item with new data (description and isFlag)\n\n    if (values.description === selectedNews.description) {\n      setAlert({ type: \"warning\", message: \"Event can't be as previous\" });\n      return;\n    }\n    setloader(true);\n\n    const url = `${process.env.REACT_APP_API_KEY}/admins/event/edit`;\n\n    const playload = {\n      id: selectedNews._id,\n      description: values.description,\n    };\n    //console.log(playload);\n    const config = {\n      headers: {\n        Authorization: `Bearer ${admin?.token}`,\n      },\n    };\n\n    try {\n      await axios.post(url, playload, config);\n      setAlert({ type: \"success\", message: \"News Updated successful\" });\n      setEditDialogOpen(false);\n      setSelectedNews(null);\n      setloader(false);\n      fetchEvent();\n    } catch (error) {\n      setAlert({ type: \"error\", message: \"Somthing went wrong\" });\n    }\n  };\n\n  const handleDelete = (id, title) => {\n    // Open the delete confirmation dialog\n    setDeleteDialogOpen(true);\n    setselectedNewsForDelete({ id: id, title: title });\n  };\n\n  const handleConfirmDelete = async () => {\n    // Close the delete confirmation dialog\n    const url = `${process.env.REACT_APP_API_KEY}/admins/event/delete`;\n\n    const playload = {\n      id: selectedNewsForDelete.id,\n    };\n    const config = {\n      headers: {\n        Authorization: `Bearer ${admin?.token}`,\n      },\n    };\n\n    try {\n      await axios.post(url, playload, config);\n      setAlert({ type: \"success\", message: \"News Deleted successful\" });\n\n      setDeleteDialogOpen(false);\n      setselectedNewsForDelete(null);\n      fetchEvent();\n    } catch (error) {\n      setAlert({ type: \"error\", message: \"Somthing went wrong\" });\n    }\n  };\n\n  const handleCancelDelete = () => {\n    // Close the delete confirmation dialog\n    setDeleteDialogOpen(false);\n    setselectedNewsForDelete(null);\n  };\n  const validationSchema = Yup.object().shape({\n    description: Yup.string().required(\"Description is required\"),\n  });\n\n  return (\n    <div className=\"min-h-screen  \">\n      <div className=\"container mx-auto p-8\">\n        <h1 className=\"text-3xl font-bold mb-4\">Event View</h1>\n        {eventList?.map((news) => (\n          <div\n            key={news._id}\n            className={` border rounded-lg p-6 mb-4 shadow-md hover:shadow-lg transition duration-300`}\n          >\n            <h2 className=\"text-xl font-bold mb-2\">{news.title}</h2>\n            <p className=\"text-purple-300 mb-2\">{news.date}</p>\n            <p className=\"text-sm mb-4\">{news.description}</p>\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <button\n                  onClick={() => handleEdit(news)}\n                  className=\"text-green-500 font-bold py-2 px-4 rounded mr-2 hover:bg-green-500 hover:text-white focus:outline-none focus:shadow-outline\"\n                >\n                  Edit\n                </button>\n              </div>\n              <button\n                onClick={() => handleDelete(news._id, news.title)}\n                className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Custom Delete Confirmation Modal */}\n      {selectedNewsForDelete && (\n        <div\n          className={`fixed inset-0 flex items-center justify-center ${\n            isDeleteDialogOpen ? \"visible\" : \"hidden\"\n          }`}\n          style={{\n            backdropFilter: isDeleteDialogOpen ? \"blur(8px)\" : \"none\",\n            zIndex: isDeleteDialogOpen ? 999 : -1,\n          }}\n        >\n          <div className=\"bg-white rounded-lg p-6 text-center\">\n            <p className=\"text-lg text-black font-semibold mb-4\">\n              Are you sure you want to delete this Event?\n            </p>\n            <div className=\"mb-4\">\n              <p className=\"text-gray-600 mt-2\">\n                {selectedNewsForDelete.title}\n              </p>\n            </div>\n            <div className=\"flex justify-center\">\n              <button\n                onClick={() => {\n                  handleConfirmDelete();\n                }}\n                className=\"bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md mr-2\"\n              >\n                Delete\n              </button>\n              <button\n                onClick={() => {\n                  handleCancelDelete();\n                }}\n                className=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-md\"\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Custom Edit Dialog */}\n      {selectedNews && (\n        <div\n          className={`fixed inset-0 flex items-center justify-center ${\n            isEditDialogOpen ? \"visible\" : \"hidden\"\n          }`}\n          style={{\n            backdropFilter: isEditDialogOpen ? \"blur(8px)\" : \"none\",\n            zIndex: isEditDialogOpen ? 999 : -1,\n          }}\n        >\n          <div className=\"bg-white border border-black rounded-lg p-8\">\n            <h2 className=\"text-xl font-bold mb-4 text-purple-700\">\n              Edit Event\n            </h2>\n            <Formik\n              initialValues={{\n                description: selectedNews.description,\n              }}\n              validationSchema={validationSchema}\n              onSubmit={handleConfirmEdit}\n            >\n              {({ errors, touched, isSubmitting }) => (\n                <Form>\n                  <div className=\"mb-4\">\n                    <label className=\"block text-gray-700 font-bold mb-2\">\n                      Description\n                    </label>\n                    <Field\n                      name=\"description\"\n                      className={`appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline ${\n                        errors.description && touched.description\n                          ? \"border-red-500\"\n                          : \"\"\n                      }`}\n                      component=\"textarea\"\n                      rows=\"3\"\n                      placeholder=\"Enter news description\"\n                    />\n                    {errors.description && touched.description && (\n                      <p className=\"text-red-500 text-xs italic\">\n                        {errors.description}\n                      </p>\n                    )}\n                  </div>\n\n                  <div className=\"flex justify-end\">\n                    <button\n                      type=\"button\"\n                      onClick={handleCancelEdit}\n                      className=\"text-gray-500 font-bold py-2 px-4 rounded mr-2 hover:bg-gray-200 focus:outline-none focus:shadow-outline\"\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      disabled={loader}\n                      className=\"bg-purple-800 hover:bg-purple-900 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                    >\n                      {loader ? \"Plz wait .....\" : \"Update\"}\n                    </button>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default NewsView;\n","import React, { useEffect, useState } from \"react\";\nimport EventsUploadFrom from \"../components/EventsUploadFrom\";\n\nimport EventView from \"../components/EventView\";\nimport { AuthApi } from \"../../context/user\";\nimport axios from \"axios\";\n\nconst Events = () => {\n  const [eventList, seteventList] = useState([]);\n  const { admin } = AuthApi();\n\n  const fetchEvent = async () => {\n    // Handle the form submission here\n\n    const url = `${process.env.REACT_APP_API_KEY}/admins/event`;\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${admin?.token}`,\n      },\n    };\n    try {\n      const res = await axios.get(url, config);\n\n      seteventList(res.data.data);\n    } catch (error) {}\n  };\n  useEffect(() => {\n    fetchEvent();\n  }, [admin]);\n\n  return (\n    <div className={`min-h-screen  `}>\n      <div className=\"container mx-auto p-8\">\n        <h1 className={` text-3xl text-gray-400 font-bold mb-4`}>\n          Events Upload\n        </h1>\n        <EventsUploadFrom fetchEvent={fetchEvent} />\n      </div>\n      <EventView eventList={eventList} fetchEvent={fetchEvent} />\n    </div>\n  );\n};\n\nexport default Events;\n"],"names":["NewsSchema","Yup","shape","title","required","date","eventText","_ref","fetchEvent","setAlert","AlertApi","admin","AuthApi","_jsx","Formik","initialValues","validationSchema","onSubmit","async","values","_ref2","resetForm","url","concat","process","playload","description","config","headers","Authorization","token","axios","post","type","message","error","children","_ref3","errors","touched","isSubmitting","_jsxs","Form","className","htmlFor","Field","name","id","placeholder","ErrorMessage","component","as","rows","disabled","eventList","isDeleteDialogOpen","setDeleteDialogOpen","useState","selectedNewsForDelete","setselectedNewsForDelete","isEditDialogOpen","setEditDialogOpen","selectedNews","setSelectedNews","loader","setloader","handleCancelEdit","map","news","onClick","handleEdit","handleDelete","_id","style","backdropFilter","zIndex","handleConfirmDelete","Events","seteventList","res","get","data","useEffect","EventsUploadFrom","EventView"],"sourceRoot":""}
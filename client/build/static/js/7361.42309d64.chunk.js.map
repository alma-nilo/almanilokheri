{"version":3,"file":"static/js/7361.42309d64.chunk.js","mappings":"qMAOA,MAAMA,EAAYC,EAAAA,KAAaC,MAAM,CACnCC,OAAQF,EAAAA,KACLG,SAAS,YACTC,SACC,CAACJ,EAAAA,GAAQ,UAAW,MACpB,yDAEJK,OAAQL,EAAAA,KACLG,SAAS,YACTG,QACC,6BACA,kHAEJC,KAAMP,EAAAA,KACHQ,MAAM,CAACR,EAAAA,GAAQ,UAAW,MAAO,wBACjCG,SAAS,cAmJd,EAhJkBM,KAChB,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,OAEf,MAAEC,IAAUC,EAAAA,EAAAA,KA2ClB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAIF,UAAS,yCAA2CC,SAAC,qBAIzDC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CAAEjB,OAAQ,GAAIG,OAAQ,GAAIE,KAAM,IAC/Ca,iBAAkBrB,EAClBsB,SAlDeC,MAAOC,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EAE/C,MAAM,OAAEtB,EAAM,OAAEG,GAAWkB,EAIrBG,EAAG,GAAAC,OAAMC,wBAA6B,qBAEtCC,EAAW,CACf3B,OAAQA,EACRG,OAAQA,GAGJyB,EAAS,CACbC,QAAS,CACPC,cAAc,UAADL,OAAYf,EAAMqB,SAGnC,IACE,MAAM,KAAEC,SAAeC,EAAAA,EAAMC,KAAKV,EAAKG,EAAUC,GAEjD,GAAkB,IAAdI,EAAKG,KAKP,YAJA3B,EAAS,CACP4B,KAAM,QACNC,QAAS,uBAIX7B,EAAS,CACP4B,KAAM,UACNC,QAAS,4BAIbd,GACF,CAAE,MAAOe,GAEP9B,EAAS,CAAE4B,KAAM,QAASC,QAASC,EAAMD,SAC3C,GAY2BvB,SAEtByB,IAAA,IAAC,OAAEC,EAAM,QAAEC,EAAO,aAAEC,GAAcH,EAAA,OACjC3B,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAAC9B,UAAU,OAAMC,SAAA,EACpBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SACEF,UAAU,6CACV+B,QAAQ,SAAQ9B,SACjB,mBAGDC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAK,CACJT,KAAK,OACLU,KAAK,SACLC,GAAG,SACHlC,UAAS,0IAAAY,OACPe,EAAOxC,QAAUyC,EAAQzC,OACrB,yBACA,IAENgD,YAAY,wBAEdjC,EAAAA,EAAAA,KAACkC,EAAAA,GAAY,CACXH,KAAK,SACLI,UAAU,MACVrC,UAAU,kCAIdD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SACEF,UAAU,6CACV+B,QAAQ,SAAQ9B,SACjB,mBAGDC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAK,CACJT,KAAK,WACLU,KAAK,SACLC,GAAG,SACHlC,UAAS,2IAAAY,OACPe,EAAOrC,QAAUsC,EAAQtC,OAAS,wBAA0B,IAE9D6C,YAAY,kBAEdjC,EAAAA,EAAAA,KAACkC,EAAAA,GAAY,CACXH,KAAK,SACLI,UAAU,MACVrC,UAAU,kCAIdD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SACEF,UAAU,6CACV+B,QAAQ,OAAM9B,SACf,uBAGDC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAK,CACJT,KAAK,WACLU,KAAK,OACLC,GAAG,OACHlC,UAAS,0IAAAY,OACPe,EAAOnC,MAAQoC,EAAQpC,KAAO,wBAA0B,IAE1D2C,YAAY,4BAEdjC,EAAAA,EAAAA,KAACkC,EAAAA,GAAY,CACXH,KAAK,OACLI,UAAU,MACVrC,UAAU,kCAIdE,EAAAA,EAAAA,KAAA,UACEqB,KAAK,SACLvB,UAAU,iHACVsC,SAAUT,EAAa5B,SAEtB4B,EAAe,kBAAoB,oBAEjC,MAGP,C","sources":["admin/pages/ChangePwd.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport { AlertApi } from \"../../context/AlertContext\";\nimport { AuthApi } from \"../../context/user\";\n\nconst pwdSchema = Yup.object().shape({\n  oldpwd: Yup.string()\n    .required(\"Required\")\n    .notOneOf(\n      [Yup.ref(\"newpwd\"), null],\n      \"Old password must not be the same as the new password\"\n    ),\n  newpwd: Yup.string()\n    .required(\"Required\")\n    .matches(\n      /^(?=.*\\d)(?=.*[A-Z]).{8,}$/,\n      \"Password must be at least 8 characters long, contain at least one number, and have at least one capital letter\"\n    ),\n  Cpwd: Yup.string()\n    .oneOf([Yup.ref(\"newpwd\"), null], \"Passwords must match\")\n    .required(\"Required\"),\n});\n\nconst ChangePwd = () => {\n  const { setAlert } = AlertApi();\n\n  const { admin } = AuthApi();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    // Handle the form submission here\n    const { oldpwd, newpwd } = values;\n\n    // //console.log(values);\n\n    const url = `${process.env.REACT_APP_API_KEY}/admins/changePwd`;\n\n    const playload = {\n      oldpwd: oldpwd,\n      newpwd: newpwd,\n    };\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${admin.token}`,\n      },\n    };\n    try {\n      const { data } = await axios.post(url, playload, config);\n\n      if (data.code === 0) {\n        setAlert({\n          type: \"error\",\n          message: \"Old Password Wrong\",\n        });\n        return;\n      } else {\n        setAlert({\n          type: \"success\",\n          message: \"Password Change success\",\n        });\n      }\n\n      resetForm();\n    } catch (error) {\n      //console.log(error.config);\n      setAlert({ type: \"error\", message: error.message });\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-8\">\n      <h1 className={` text-3xl text-gray-400 font-bold mb-4`}>\n        Password Change\n      </h1>\n\n      <Formik\n        initialValues={{ oldpwd: \"\", newpwd: \"\", Cpwd: \"\" }}\n        validationSchema={pwdSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched, isSubmitting }) => (\n          <Form className=\"mt-4\">\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"oldpwd\"\n              >\n                Old Password:\n              </label>\n              <Field\n                type=\"text\"\n                name=\"oldpwd\"\n                id=\"oldpwd\"\n                className={`appearance-none  rounded w-full py-2 px-3 text-white-900 font-bold bg-purple-600 leading-tight focus:outline-none focus:shadow-outline ${\n                  errors.oldpwd && touched.oldpwd\n                    ? \" border border-red-500\"\n                    : \"\"\n                }`}\n                placeholder=\"Enter Old password\"\n              />\n              <ErrorMessage\n                name=\"oldpwd\"\n                component=\"div\"\n                className=\"text-red-500 text-sm mt-1\"\n              />\n            </div>\n\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"newpwd\"\n              >\n                New Password:\n              </label>\n              <Field\n                type=\"password\"\n                name=\"newpwd\"\n                id=\"newpwd\"\n                className={`appearance-none  rounded w-full py-2 px-3 text-white-900 font-bold leading-tight  bg-purple-600 focus:outline-none focus:shadow-outline ${\n                  errors.newpwd && touched.newpwd ? \"border border-red-500\" : \"\"\n                }`}\n                placeholder=\"New Password\"\n              />\n              <ErrorMessage\n                name=\"newpwd\"\n                component=\"div\"\n                className=\"text-red-500 text-sm mt-1\"\n              />\n            </div>\n\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"Cpwd\"\n              >\n                Confirm Password:\n              </label>\n              <Field\n                type=\"password\"\n                name=\"Cpwd\"\n                id=\"Cpwd\"\n                className={`appearance-none  rounded w-full py-2 px-3 text-white-900 font-bold leading-tight bg-purple-600 focus:outline-none focus:shadow-outline ${\n                  errors.Cpwd && touched.Cpwd ? \"border border-red-500\" : \"\"\n                }`}\n                placeholder=\"Enter Confirm Password\"\n              />\n              <ErrorMessage\n                name=\"Cpwd\"\n                component=\"div\"\n                className=\"text-red-500 text-sm mt-1\"\n              />\n            </div>\n\n            <button\n              type=\"submit\"\n              className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n              disabled={isSubmitting}\n            >\n              {isSubmitting ? \"Plz wait ......\" : \" Submit Event\"}\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default ChangePwd;\n"],"names":["pwdSchema","Yup","shape","oldpwd","required","notOneOf","newpwd","matches","Cpwd","oneOf","ChangePwd","setAlert","AlertApi","admin","AuthApi","_jsxs","className","children","_jsx","Formik","initialValues","validationSchema","onSubmit","async","values","_ref","resetForm","url","concat","process","playload","config","headers","Authorization","token","data","axios","post","code","type","message","error","_ref2","errors","touched","isSubmitting","Form","htmlFor","Field","name","id","placeholder","ErrorMessage","component","disabled"],"sourceRoot":""}
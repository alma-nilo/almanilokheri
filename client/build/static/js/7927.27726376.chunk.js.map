{"version":3,"file":"static/js/7927.27726376.chunk.js","mappings":"uKAOA,MAkIA,EAlIwBA,KAOtB,MAAMC,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KAAaE,SAAS,YAC5BC,MAAOH,EAAAA,KAAaG,MAAM,iBAAiBD,SAAS,YACpDE,SAAUJ,EAAAA,KACPK,IAAI,EAAG,0CACPH,SAAS,cA8Bd,OACEI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iDAAgDC,UAC7DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAAC,sBAGpEF,EAAAA,EAAAA,KAACI,EAAAA,GAAM,CACLC,cAhDY,CAClBV,KAAM,GACNE,MAAO,GACPC,SAAU,IA8CJL,iBAAkBA,EAClBa,SAjCSC,MAAOC,EAAMC,KAAoC,IAAlC,cAAEC,EAAa,UAAEC,GAAWF,EAG1DC,GAAc,EAAK,EA8BMR,SAElBU,IAAA,IAAC,aAAEC,GAAcD,EAAA,OAChBT,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAAAZ,SAAA,EACHC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SACEe,QAAQ,OACRd,UAAU,yCAAwCC,SACnD,UAGDF,EAAAA,EAAAA,KAACgB,EAAAA,GAAK,CACJC,KAAK,OACLtB,KAAK,OACLuB,GAAG,OACHjB,UAAU,+GAEZD,EAAAA,EAAAA,KAACmB,EAAAA,GAAY,CACXxB,KAAK,OACLyB,UAAU,IACVnB,UAAU,qBAIdE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SACEe,QAAQ,QACRd,UAAU,yCAAwCC,SACnD,WAGDF,EAAAA,EAAAA,KAACgB,EAAAA,GAAK,CACJC,KAAK,QACLtB,KAAK,QACLuB,GAAG,QACHjB,UAAU,+GAEZD,EAAAA,EAAAA,KAACmB,EAAAA,GAAY,CACXxB,KAAK,QACLyB,UAAU,IACVnB,UAAU,qBAIdE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SACEe,QAAQ,WACRd,UAAU,yCAAwCC,SACnD,cAGDF,EAAAA,EAAAA,KAACgB,EAAAA,GAAK,CACJC,KAAK,WACLtB,KAAK,WACLuB,GAAG,WACHjB,UAAU,+GAEZD,EAAAA,EAAAA,KAACmB,EAAAA,GAAY,CACXxB,KAAK,WACLyB,UAAU,IACVnB,UAAU,qBAIdD,EAAAA,EAAAA,KAAA,UACEiB,KAAK,SACLI,SAAUR,EACVZ,UAAU,4GAA2GC,SAEpHW,EAAe,gBAAkB,mBAE/B,QAIT,C","sources":["admin/pages/DashNewAdmin.jsx"],"sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n// import { AlertApi } from \"../../context/alert\";\n// import { AuthApi } from \"../../context/user\";\nimport axios from \"axios\";\n\nconst CreateAdminForm = () => {\n  let initialValues = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Required\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n    password: Yup.string()\n      .min(6, \"Password must be at least 6 characters\")\n      .required(\"Required\"),\n  });\n\n  // const { setAlert } = AlertApi();\n  // const { user } = AuthApi();\n\n  const onSubmit = async (values, { setSubmitting, resetForm }) => {\n    // You can handle form submission here.\n\n    setSubmitting(true);\n\n    // const config = {\n    //   headers: {\n    //     authorization: user.token,\n    //   },\n    // };\n\n    // let url = `${process.env.REACT_APP_API_KEY}/admins/newadmin`;\n    // try {\n    //   const { data } = await axios.post(url, values, config);\n    //   setAlert({ type: \"success\", message: \"New Admin Created\" });\n    //   setSubmitting(false);\n    //   resetForm();\n    // } catch (error) {\n    //   //console.log(error);\n    //   setAlert({ type: \"error\", message: \"Somthing went wrong \" });\n    //   setSubmitting(false);\n    // }\n  };\n\n  return (\n    <div className=\" min-h-screen flex items-center justify-center\">\n      <div className=\"bg-white p-8 rounded-lg shadow-lg w-96\">\n        <h2 className=\"text-3xl font-bold mb-6 text-center text-purple-800\">\n          Create New Admin\n        </h2>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={onSubmit}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <div className=\"mb-4\">\n                <label\n                  htmlFor=\"name\"\n                  className=\"block text-gray-800 font-semibold mb-2\"\n                >\n                  Name\n                </label>\n                <Field\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  className=\"w-full px-4 py-2 bg-purple-100 text-gray-800 border rounded-lg focus:outline-none focus:border-purple-500\"\n                />\n                <ErrorMessage\n                  name=\"name\"\n                  component=\"p\"\n                  className=\"text-red-600\"\n                />\n              </div>\n\n              <div className=\"mb-4\">\n                <label\n                  htmlFor=\"email\"\n                  className=\"block text-gray-800 font-semibold mb-2\"\n                >\n                  Email\n                </label>\n                <Field\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  className=\"w-full px-4 py-2 bg-purple-100 text-gray-800 border rounded-lg focus:outline-none focus:border-purple-500\"\n                />\n                <ErrorMessage\n                  name=\"email\"\n                  component=\"p\"\n                  className=\"text-red-600\"\n                />\n              </div>\n\n              <div className=\"mb-4\">\n                <label\n                  htmlFor=\"password\"\n                  className=\"block text-gray-800 font-semibold mb-2\"\n                >\n                  Password\n                </label>\n                <Field\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  className=\"w-full px-4 py-2 bg-purple-100 text-gray-800 border rounded-lg focus:outline-none focus:border-purple-500\"\n                />\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"p\"\n                  className=\"text-red-600\"\n                />\n              </div>\n\n              <button\n                type=\"submit\"\n                disabled={isSubmitting}\n                className=\"bg-purple-500 hover:bg-purple-600 text-white font-semibold px-4 py-2 rounded-lg focus:outline-none w-full\"\n              >\n                {isSubmitting ? \"Submitting...\" : \"Create Admin\"}\n              </button>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateAdminForm;\n"],"names":["CreateAdminForm","validationSchema","Yup","name","required","email","password","min","_jsx","className","children","_jsxs","Formik","initialValues","onSubmit","async","values","_ref","setSubmitting","resetForm","_ref2","isSubmitting","Form","htmlFor","Field","type","id","ErrorMessage","component","disabled"],"sourceRoot":""}
{"version":3,"file":"static/js/6759.6c0de954.chunk.js","mappings":"oRAUA,MA8PA,EA9PkBA,IAA8B,IAA7B,YAAEC,GAAc,GAAOD,EACxC,MAAOE,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,CACjD,CACEC,GAAI,QACJC,MAAO,SACPC,KAAM,CACJ,CAAEC,EAAG,IAAKC,EAAG,GACb,CAAED,EAAG,IAAKC,EAAG,GACb,CAAED,EAAG,IAAKC,EAAG,GACb,CAAED,EAAG,IAAKC,EAAG,GACb,CAAED,EAAG,IAAKC,EAAG,GACb,CAAED,EAAG,IAAKC,EAAG,GACb,CAAED,EAAG,IAAKC,EAAG,GACb,CAAED,EAAG,IAAKC,EAAG,GACb,CAAED,EAAG,IAAKC,EAAG,GACb,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,GACd,CAAED,EAAG,KAAMC,EAAG,QAIbC,EAASC,IAAcP,EAAAA,EAAAA,UAAS,IAChCQ,EAAOC,IAAYT,EAAAA,EAAAA,UAAS,GAC7BU,GAAQC,EAAAA,EAAAA,KACRC,GAASC,EAAAA,EAAAA,IAAOH,EAAMI,QAAQC,OAC9B,MAAEC,IAAUC,EAAAA,EAAAA,MACZ,MAAEC,EAAK,KAAEC,IAASC,EAAAA,EAAAA,MAwBxB,OAJAC,EAAAA,EAAAA,YAAU,KAjBWC,WACnB,MAAMC,EAAG,GAAAC,OAAMC,wBAA6B,sCAAAD,OAAqCN,EAAK,UAAAM,OAASL,GAEzFO,EAAS,CACbC,QAAS,CACPC,cAAc,UAADJ,OAAiB,OAALR,QAAK,IAALA,OAAK,EAALA,EAAOa,SAGpC,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAIT,EAAKG,GAEtC3B,EAAiB+B,EAAS3B,KAAK8B,SAC/B1B,EAAWuB,EAAS3B,KAAK+B,SACzBzB,EAASqB,EAAS3B,KAAKgC,MACzB,CAAE,MAAOC,GAAQ,GAIjBC,EAAc,GACb,KAGDC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACLC,SAAS,SACTC,UAAW,EACXC,GAAI,CACFC,gBACyB,SAAvBpC,EAAMI,QAAQC,KACVH,EAAOmC,QAAQ,KACfnC,EAAOmC,QAAQ,KACrBC,aAAa,aAADxB,OAAed,EAAMI,QAAQmC,UACzCT,UAEFF,EAAAA,EAAAA,MAACY,EAAAA,EAAO,CAAAV,SAAA,EACNC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CACTC,KAAK,QACLlD,MAAOU,EAAOmC,QAAQ,KACtB,aAAW,OACXM,QAASA,IAAMC,OAAOC,QAAQC,OAAOhB,UAErCC,EAAAA,EAAAA,KAACgB,EAAAA,EAAa,OAEhBhB,EAAAA,EAAAA,KAAA,OACEiB,IAAKC,EACLC,IAAI,kCACJC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,YAAa,WAEvD1B,EAAAA,EAAAA,MAAC2B,EAAAA,EAAG,CAAAzB,SAAA,EACFC,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAAChE,MAAOU,EAAOmC,QAAQ,KAAMoB,QAAQ,KAAI3B,SAAC,qCAGrDF,EAAAA,EAAAA,MAAC4B,EAAAA,EAAU,CAAChE,MAAOU,EAAOmC,QAAQ,KAAMoB,QAAQ,KAAI3B,SAAA,CACjDtB,EAAM,MAAIC,cAMnBmB,EAAAA,EAAAA,MAAC2B,EAAAA,EAAG,CACFG,GAAG,OACHC,EAAE,SACFC,QAAQ,QACRC,eAAe,gBACfC,WAAW,SAAQhC,SAAA,EAEnBC,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAAAzB,UACFC,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CACTC,QAAQ,KACRM,WAAW,MACXvE,MAAOU,EAAO8D,YAAY,UAG9BpC,EAAAA,EAAAA,MAAC2B,EAAAA,EAAG,CAAAzB,SAAA,EACFC,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAACC,QAAQ,KAAKM,WAAW,MAAMvE,MAAOU,EAAO+D,KAAK,KAAKnC,SAAC,yBAGnEC,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CACTC,QAAQ,KACRM,WAAW,OACXvE,MAAOU,EAAO8D,YAAY,KAAKlC,SAE9BhC,QAGL8B,EAAAA,EAAAA,MAAC2B,EAAAA,EAAG,CAAAzB,SAAA,EACFC,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAACC,QAAQ,KAAKM,WAAW,MAAMvE,MAAOU,EAAO+D,KAAK,KAAKnC,SAAC,qBAGnEC,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CACTC,QAAQ,KACRM,WAAW,OACXvE,MAAOU,EAAO8D,YAAY,KAAKlC,SAE9BlC,WAKPmC,EAAAA,EAAAA,KAACmC,EAAAA,GAAc,CACbzE,KAAML,EACNY,MAAO,CACLmE,KAAM,CACJC,OAAQ,CACNC,KAAM,CACJC,OAAQpE,EAAO+D,KAAK,OAGxBM,OAAQ,CACNC,KAAM,CACJC,KAAMvE,EAAO+D,KAAK,OAGtBS,MAAO,CACLL,KAAM,CACJC,OAAQpE,EAAO+D,KAAK,KACpBU,YAAa,GAEfH,KAAM,CACJC,KAAMvE,EAAO+D,KAAK,QAIxBW,QAAS,CACPJ,KAAM,CACJC,KAAMvE,EAAO+D,KAAK,OAGtBY,QAAS,CACPC,UAAW,CACTtF,MAAOU,EAAOmC,QAAQ,QAI5BnC,OAAQf,EAAc,CAAE4F,MAAO,SAAY,CAAEC,OAAQ,QACrDC,OAAQ,CAAEC,IAAK,GAAIC,MAAO,IAAKC,OAAQ,IAAKC,KAAM,IAClDC,OAAQ,CAAEC,KAAM,SAChBC,OAAQ,CACND,KAAM,SACNE,IAAK,OACLC,IAAK,OACLC,SAAS,EACTC,SAAS,GAEXC,QAAQ,SACRC,MAAM,aACNC,QAAS,KACTC,UAAW,KACXC,WAAY,CACVC,OAAQ,SACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACd9B,OAAQ,OACR+B,aAAc,GACdC,eAAgB,UAElBC,SAAU,CACRN,OAAQ,OACRO,WAAY,EACZN,SAAU,EACVC,YAAa,EACbC,aAAc,EACd9B,OAAQ,QACR+B,cAAe,GACfC,eAAgB,UAElBG,aAAa,EACbC,aAAa,EACbC,UAAW,EACXC,WAAY,CAAE7G,MAAO,cACrB8G,iBAAkB,EAClBC,iBAAkB,CAAEC,KAAM,cAC1BC,mBAAoB,GACpBC,SAAS,EACTtC,QAAS,CACP,CACEuC,OAAQ,eACRC,UAAW,SACXC,SAAS,EACTC,WAAY,IACZC,WAAY,EACZC,aAAc,EACdC,cAAe,gBACfC,UAAW,GACXC,WAAY,GACZC,YAAa,IACbC,WAAY,GACZC,YAAa,SACbC,kBAAmB,oBACnBC,QAAS,CACP,CACEC,GAAI,QACJ9E,MAAO,CACL+E,eAAgB,qBAChBN,YAAa,WAOxB,C,6EChQA,MAAMzH,EAAUE,IAAI,IACZ,SAATA,EACA,CACE4D,KAAM,CACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WAEP5B,QAAS,CACP,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WAEP2B,YAAa,CACX,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WAEPmE,UAAW,CACT,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WAEPC,WAAY,CACV,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,YAGT,CACEnE,KAAM,CACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WAEP5B,QAAS,CACP,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WAEP2B,YAAa,CACX,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WAEPmE,UAAW,CACT,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WAEPC,WAAY,CACV,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,cA+EFC,GAAmBC,EAAAA,EAAAA,eAAc,CAC5CC,gBAAiBA,SAGNC,EAAUA,KACrB,MAAOnI,EAAMoI,IAAWnJ,EAAAA,EAAAA,UAAS,QAE3BoJ,GAAYC,EAAAA,EAAAA,UAChB,MACEJ,gBAAiBA,IACfE,GAASG,GAAmB,UAATA,EAAmB,OAAS,aAEnD,IAIF,MAAO,EADOD,EAAAA,EAAAA,UAAQ,KAAME,EAAAA,EAAAA,GAxFAxI,KAC5B,MAAMH,EAASC,EAAOE,GACtB,MAAO,CACLD,QAAS,CACPC,KAAMA,KACO,SAATA,EACA,CAEEgC,QAAS,CACPyG,KAAM5I,EAAOmC,QAAQ,MAEvB0G,UAAW,CACTD,KAAM5I,EAAO8D,YAAY,MAE3BgF,QAAS,CACPC,KAAM/I,EAAO+D,KAAK,KAClB6E,KAAM5I,EAAO+D,KAAK,KAClBiF,MAAOhJ,EAAO+D,KAAK,MAErBkF,WAAY,CACVC,QAASlJ,EAAOmC,QAAQ,OAG5B,CAEEA,QAAS,CACPyG,KAAM5I,EAAOmC,QAAQ,MAEvB0G,UAAW,CACTD,KAAM5I,EAAO8D,YAAY,MAE3BgF,QAAS,CACPC,KAAM/I,EAAO+D,KAAK,KAClB6E,KAAM5I,EAAO+D,KAAK,KAClBiF,MAAOhJ,EAAO+D,KAAK,MAErBkF,WAAY,CACVC,QAAS,aAInBC,WAAY,CACVC,WAAY,CAAC,kBAAmB,cAAcC,KAAK,KACnDC,SAAU,GACVC,GAAI,CACFH,WAAY,CAAC,kBAAmB,cAAcC,KAAK,KACnDC,SAAU,IAEZE,GAAI,CACFJ,WAAY,CAAC,kBAAmB,cAAcC,KAAK,KACnDC,SAAU,IAEZG,GAAI,CACFL,WAAY,CAAC,kBAAmB,cAAcC,KAAK,KACnDC,SAAU,IAEZI,GAAI,CACFN,WAAY,CAAC,kBAAmB,cAAcC,KAAK,KACnDC,SAAU,IAEZK,GAAI,CACFP,WAAY,CAAC,kBAAmB,cAAcC,KAAK,KACnDC,SAAU,IAEZM,GAAI,CACFR,WAAY,CAAC,kBAAmB,cAAcC,KAAK,KACnDC,SAAU,KAGf,EAmBuCO,CAAc1J,KAAQ,CAACA,IAChDqI,EAAU,C","sources":["admin/pages/MonthsRecord.jsx","theme.js"],"sourcesContent":["import { ResponsiveLine } from \"@nivo/line\";\nimport { Box, useTheme } from \"@mui/material\";\nimport { useParams, useSearchParams } from \"react-router-dom\";\nimport { tokens } from \"../../theme\";\nimport { useEffect, useState } from \"react\";\nimport Logo from \"../../Assets/Logo.jpeg\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport { Typography, AppBar, Toolbar, IconButton } from \"@mui/material\";\nimport { AuthApi } from \"../../context/user\";\nimport axios from \"axios\";\nconst LineChart = ({ isDashboard = false }) => {\n  const [TrafficMonths, setTrafficMonths] = useState([\n    {\n      id: \"Month\",\n      color: \"a4a9fc\",\n      data: [\n        { x: \"1\", y: 0 },\n        { x: \"2\", y: 0 },\n        { x: \"3\", y: 0 },\n        { x: \"4\", y: 0 },\n        { x: \"5\", y: 0 },\n        { x: \"6\", y: 0 },\n        { x: \"7\", y: 0 },\n        { x: \"8\", y: 0 },\n        { x: \"9\", y: 0 },\n        { x: \"10\", y: 0 },\n        { x: \"11\", y: 0 },\n        { x: \"12\", y: 0 },\n        { x: \"13\", y: 0 },\n        { x: \"14\", y: 0 },\n        { x: \"15\", y: 0 },\n        { x: \"16\", y: 0 },\n        { x: \"17\", y: 0 },\n        { x: \"18\", y: 0 },\n        { x: \"19\", y: 0 },\n        { x: \"20\", y: 0 },\n        { x: \"21\", y: 0 },\n        { x: \"22\", y: 0 },\n        { x: \"23\", y: 0 },\n        { x: \"24\", y: 0 },\n        { x: \"25\", y: 0 },\n        { x: \"26\", y: 0 },\n        { x: \"27\", y: 0 },\n        { x: \"28\", y: 0 },\n        { x: \"29\", y: 0 },\n        { x: \"30\", y: 0 },\n        { x: \"31\", y: 0 },\n      ],\n    },\n  ]);\n  const [average, setaverage] = useState(0);\n  const [total, settotal] = useState(0);\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const { admin } = AuthApi();\n  const { month, year } = useParams();\n  //console.log(month, year);\n\n  const fetchTraffic = async () => {\n    const url = `${process.env.REACT_APP_API_KEY}/admins/OneMonthTrafficData?month=${month}&year=${year}`;\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${admin?.token}`,\n      },\n    };\n    try {\n      const response = await axios.get(url, config);\n      // //console.log(response.data.data);\n      setTrafficMonths(response.data.Traffic);\n      setaverage(response.data.Average);\n      settotal(response.data.Total);\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    fetchTraffic();\n  }, []);\n\n  return (\n    <>\n      <AppBar\n        position=\"sticky\"\n        elevation={0}\n        sx={{\n          backgroundColor:\n            theme.palette.mode === \"dark\"\n              ? colors.primary[800]\n              : colors.primary[400],\n          borderBottom: `1px solid ${theme.palette.divider}`,\n        }}\n      >\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color={colors.primary[100]}\n            aria-label=\"back\"\n            onClick={() => window.history.back()}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n          <img\n            src={Logo}\n            alt=\"GBN Govt. Polytechnic Nilokheri\"\n            style={{ width: \"48px\", height: \"48px\", marginRight: \"16px\" }}\n          />\n          <Box>\n            <Typography color={colors.primary[100]} variant=\"h6\">\n              GBN Govt. Polytechnic Nilokheri\n            </Typography>\n            <Typography color={colors.primary[100]} variant=\"h4\">\n              {month} - {year}\n            </Typography>\n          </Box>\n        </Toolbar>\n      </AppBar>\n\n      <Box\n        mt=\"25px\"\n        p=\"0 30px\"\n        display=\"flex \"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Box>\n          <Typography\n            variant=\"h3\"\n            fontWeight=\"600\"\n            color={colors.greenAccent[500]}\n          ></Typography>\n        </Box>\n        <Box>\n          <Typography variant=\"h5\" fontWeight=\"600\" color={colors.grey[100]}>\n            Total Traffic Visit\n          </Typography>\n          <Typography\n            variant=\"h3\"\n            fontWeight=\"bold\"\n            color={colors.greenAccent[500]}\n          >\n            {total}\n          </Typography>\n        </Box>\n        <Box>\n          <Typography variant=\"h5\" fontWeight=\"600\" color={colors.grey[100]}>\n            Average Traffic\n          </Typography>\n          <Typography\n            variant=\"h3\"\n            fontWeight=\"bold\"\n            color={colors.greenAccent[500]}\n          >\n            {average}\n          </Typography>\n        </Box>\n      </Box>\n\n      <ResponsiveLine\n        data={TrafficMonths}\n        theme={{\n          axis: {\n            domain: {\n              line: {\n                stroke: colors.grey[100],\n              },\n            },\n            legend: {\n              text: {\n                fill: colors.grey[100],\n              },\n            },\n            ticks: {\n              line: {\n                stroke: colors.grey[100],\n                strokeWidth: 1,\n              },\n              text: {\n                fill: colors.grey[100],\n              },\n            },\n          },\n          legends: {\n            text: {\n              fill: colors.grey[100],\n            },\n          },\n          tooltip: {\n            container: {\n              color: colors.primary[500],\n            },\n          },\n        }}\n        colors={isDashboard ? { datum: \"color\" } : { scheme: \"nivo\" }} // added\n        margin={{ top: 10, right: 110, bottom: 270, left: 60 }}\n        xScale={{ type: \"point\" }}\n        yScale={{\n          type: \"linear\",\n          min: \"auto\",\n          max: \"auto\",\n          stacked: true,\n          reverse: false,\n        }}\n        yFormat=\" >-.2f\"\n        curve=\"catmullRom\"\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          orient: \"bottom\",\n          tickSize: 0,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: \"Days\", // added\n          legendOffset: 36,\n          legendPosition: \"middle\",\n        }}\n        axisLeft={{\n          orient: \"left\",\n          tickValues: 5, // added\n          tickSize: 3,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: \"Count\", // added\n          legendOffset: -40,\n          legendPosition: \"middle\",\n        }}\n        enableGridX={false}\n        enableGridY={false}\n        pointSize={8}\n        pointColor={{ theme: \"background\" }}\n        pointBorderWidth={2}\n        pointBorderColor={{ from: \"serieColor\" }}\n        pointLabelYOffset={-12}\n        useMesh={true}\n        legends={[\n          {\n            anchor: \"bottom-right\",\n            direction: \"column\",\n            justify: false,\n            translateX: 100,\n            translateY: 0,\n            itemsSpacing: 0,\n            itemDirection: \"left-to-right\",\n            itemWidth: 80,\n            itemHeight: 20,\n            itemOpacity: 0.75,\n            symbolSize: 12,\n            symbolShape: \"circle\",\n            symbolBorderColor: \"rgba(0, 0, 0, .5)\",\n            effects: [\n              {\n                on: \"hover\",\n                style: {\n                  itemBackground: \"rgba(0, 0, 0, .03)\",\n                  itemOpacity: 1,\n                },\n              },\n            ],\n          },\n        ]}\n      />\n    </>\n  );\n};\n\nexport default LineChart;\n","import { createContext, useState, useMemo } from \"react\";\nimport { createTheme } from \"@mui/material/styles\";\n\n// color design tokens export\nexport const tokens = (mode) => ({\n  ...(mode === \"dark\"\n    ? {\n        grey: {\n          100: \"#e0e0e0\",\n          200: \"#c2c2c2\",\n          300: \"#a3a3a3\",\n          400: \"#858585\",\n          500: \"#666666\",\n          600: \"#525252\",\n          700: \"#3d3d3d\",\n          800: \"#292929\",\n          900: \"#141414\",\n        },\n        primary: {\n          100: \"#d0d1d5\",\n          200: \"#a1a4ab\",\n          300: \"#727681\",\n          400: \"#1F2A40\",\n          500: \"#141b2d\",\n          600: \"#101624\",\n          700: \"#0c101b\",\n          800: \"#080b12\",\n          900: \"#040509\",\n        },\n        greenAccent: {\n          100: \"#dbf5ee\",\n          200: \"#b7ebde\",\n          300: \"#94e2cd\",\n          400: \"#70d8bd\",\n          500: \"#4cceac\",\n          600: \"#3da58a\",\n          700: \"#2e7c67\",\n          800: \"#1e5245\",\n          900: \"#0f2922\",\n        },\n        redAccent: {\n          100: \"#f8dcdb\",\n          200: \"#f1b9b7\",\n          300: \"#e99592\",\n          400: \"#e2726e\",\n          500: \"#db4f4a\",\n          600: \"#af3f3b\",\n          700: \"#832f2c\",\n          800: \"#58201e\",\n          900: \"#2c100f\",\n        },\n        blueAccent: {\n          100: \"#e1e2fe\",\n          200: \"#c3c6fd\",\n          300: \"#a4a9fc\",\n          400: \"#868dfb\",\n          500: \"#6870fa\",\n          600: \"#535ac8\",\n          700: \"#3e4396\",\n          800: \"#2a2d64\",\n          900: \"#151632\",\n        },\n      }\n    : {\n        grey: {\n          100: \"#141414\",\n          200: \"#292929\",\n          300: \"#3d3d3d\",\n          400: \"#525252\",\n          500: \"#666666\",\n          600: \"#858585\",\n          700: \"#a3a3a3\",\n          800: \"#c2c2c2\",\n          900: \"#e0e0e0\",\n        },\n        primary: {\n          100: \"#040509\",\n          200: \"#080b12\",\n          300: \"#0c101b\",\n          400: \"#ffffff\", // manually changed\n          500: \"#141b2d\",\n          600: \"#1F2A40\",\n          700: \"#727681\",\n          800: \"#a1a4ab\",\n          900: \"#d0d1d5\",\n        },\n        greenAccent: {\n          100: \"#0f2922\",\n          200: \"#1e5245\",\n          300: \"#2e7c67\",\n          400: \"#3da58a\",\n          500: \"#4cceac\",\n          600: \"#70d8bd\",\n          700: \"#94e2cd\",\n          800: \"#b7ebde\",\n          900: \"#dbf5ee\",\n        },\n        redAccent: {\n          100: \"#2c100f\",\n          200: \"#58201e\",\n          300: \"#832f2c\",\n          400: \"#af3f3b\",\n          500: \"#db4f4a\",\n          600: \"#e2726e\",\n          700: \"#e99592\",\n          800: \"#f1b9b7\",\n          900: \"#f8dcdb\",\n        },\n        blueAccent: {\n          100: \"#151632\",\n          200: \"#2a2d64\",\n          300: \"#3e4396\",\n          400: \"#535ac8\",\n          500: \"#6870fa\",\n          600: \"#868dfb\",\n          700: \"#a4a9fc\",\n          800: \"#c3c6fd\",\n          900: \"#e1e2fe\",\n        },\n      }),\n});\n\n// mui theme settings\nexport const themeSettings = (mode) => {\n  const colors = tokens(mode);\n  return {\n    palette: {\n      mode: mode,\n      ...(mode === \"dark\"\n        ? {\n            // palette values for dark mode\n            primary: {\n              main: colors.primary[500],\n            },\n            secondary: {\n              main: colors.greenAccent[500],\n            },\n            neutral: {\n              dark: colors.grey[700],\n              main: colors.grey[500],\n              light: colors.grey[100],\n            },\n            background: {\n              default: colors.primary[500],\n            },\n          }\n        : {\n            // palette values for light mode\n            primary: {\n              main: colors.primary[100],\n            },\n            secondary: {\n              main: colors.greenAccent[500],\n            },\n            neutral: {\n              dark: colors.grey[700],\n              main: colors.grey[500],\n              light: colors.grey[100],\n            },\n            background: {\n              default: \"#fcfcfc\",\n            },\n          }),\n    },\n    typography: {\n      fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n      fontSize: 12,\n      h1: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 40,\n      },\n      h2: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 32,\n      },\n      h3: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 24,\n      },\n      h4: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 20,\n      },\n      h5: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 16,\n      },\n      h6: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 14,\n      },\n    },\n  };\n};\n\n// context for color mode\nexport const ColorModeContext = createContext({\n  toggleColorMode: () => {},\n});\n\nexport const useMode = () => {\n  const [mode, setMode] = useState(\"dark\");\n\n  const colorMode = useMemo(\n    () => ({\n      toggleColorMode: () =>\n        setMode((prev) => (prev === \"light\" ? \"dark\" : \"light\")),\n    }),\n    []\n  );\n\n  const theme = useMemo(() => createTheme(themeSettings(mode)), [mode]);\n  return [theme, colorMode];\n};\n"],"names":["_ref","isDashboard","TrafficMonths","setTrafficMonths","useState","id","color","data","x","y","average","setaverage","total","settotal","theme","useTheme","colors","tokens","palette","mode","admin","AuthApi","month","year","useParams","useEffect","async","url","concat","process","config","headers","Authorization","token","response","axios","get","Traffic","Average","Total","error","fetchTraffic","_jsxs","_Fragment","children","_jsx","AppBar","position","elevation","sx","backgroundColor","primary","borderBottom","divider","Toolbar","IconButton","edge","onClick","window","history","back","ArrowBackIcon","src","Logo","alt","style","width","height","marginRight","Box","Typography","variant","mt","p","display","justifyContent","alignItems","fontWeight","greenAccent","grey","ResponsiveLine","axis","domain","line","stroke","legend","text","fill","ticks","strokeWidth","legends","tooltip","container","datum","scheme","margin","top","right","bottom","left","xScale","type","yScale","min","max","stacked","reverse","yFormat","curve","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","legendOffset","legendPosition","axisLeft","tickValues","enableGridX","enableGridY","pointSize","pointColor","pointBorderWidth","pointBorderColor","from","pointLabelYOffset","useMesh","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","redAccent","blueAccent","ColorModeContext","createContext","toggleColorMode","useMode","setMode","colorMode","useMemo","prev","createTheme","main","secondary","neutral","dark","light","background","default","typography","fontFamily","join","fontSize","h1","h2","h3","h4","h5","h6","themeSettings"],"sourceRoot":""}
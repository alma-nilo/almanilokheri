name: Deploy alma-nilokheri

on:
  push:
    branches:
      - master

jobs:
  frontend:
    runs-on: ubuntu-latest
    environment: frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js 18
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Navigate to client directory and  Install dependencies and  Build React app
        run: |
          cd ./client
          npm install
          npm run build
        env:
          CI: false
          REACT_APP_API_KEY: ${{ vars.REACT_APP_API_KEY }}
          REACT_APP_PRIVET_KEY: ${{ vars.REACT_APP_PRIVET_KEY }}
          REACT_APP_AWS_Access_key: ${{ vars.REACT_APP_AWS_ACCESS_KEY }}
          REACT_APP_AWS_secret_key: ${{ vars.REACT_APP_AWS_SECRET_KEY }}
          REACT_APP_AWS_S3_BUCKET: ${{ vars.REACT_APP_AWS_S3_BUCKET }}
          REACT_APP_AWS_REGION: ${{ vars.REACT_APP_AWS_REGION }}
          REACT_APP_apiKey: ${{ vars.REACT_APP_APIKEY }}
          REACT_APP_authDomain: ${{ vars.REACT_APP_AUTHDOMAIN }}
          REACT_APP_projectId: ${{ vars.REACT_APP_PROJECTID }}
          REACT_APP_storageBucket: ${{ vars.REACT_APP_STORAGEBUCKET }}
          REACT_APP_messagingSenderId: ${{ vars.REACT_APP_MESSAGINGSENDERID }}
          REACT_APP_appId: ${{ vars.REACT_APP_APPID }}
          REACT_APP_measurementId: ${{ vars.REACT_APP_MEASUREMENTID }}
          REACT_APP_TRACKING_ID: ${{ vars.REACT_APP_TRACKING_ID }}
          REACT_APP_Month: ${{ vars.REACT_APP_MONTH }}
          REACT_APP_Year: ${{ vars.REACT_APP_YEAR }}

      - name: Login to Docker Hub
        run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_KEY}}

      - name: Build frontend Docker Image
        run: docker build -t vishu7im/almanilokheri-frontend ./client

      - name: Publish frontend image to Docker Hub
        run: docker push vishu7im/almanilokheri-frontend:latest

  backend:
    runs-on: ubuntu-latest
    environment: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_KEY}}
        env:
          DATABASE_KEY: ${{ vars.DATABASE_KEY }}
          privateKey: ${{ vars.PRIVATEKEY }}
          sender_mail: ${{ vars.SENDER_MAIL }}
          mail_pwd: ${{ vars.MAIL_PWD }}
          aws_access_key: ${{ vars.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ vars.AWS_SECRET_KEY }}
          aws_s3_bucket: ${{ vars.AWS_S3_BUCKET }}
          aws_region: ${{ vars.AWS_REGION }}

      - name: Build Backend Docker Image
        run: docker build -t vishu7im/almanilokheri-backend ./backend

      - name: Publish Backend image to Docker Hub
        run: docker push vishu7im/almanilokheri-backend:latest

  deploy:
    runs-on: self-hosted
    needs:
      - backend
      - frontend
    steps:
      - name: Deploy to production
        run: |
          docker-compose pull
          docker-compose up -d
      - name: DONE
        run: echo "Deployment complete"
